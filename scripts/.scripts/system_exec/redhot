#!/usr/bin/env sh
dir="/run/media/ellio/T7/bdfr"
cd $dir

closeTerm(){
    xdotool windowclose $window 
}

QueryAllFiles(){
    echo "path,score,time" > $dir/tmp.csv
    fd --full-path "$dir" --extension=mp4 $dir/fav -x \
    jq --arg e {} -r '. |= . + {"$e": "$e"} | [$e, .score, .created_utc] | @csv' {.}.json 2>/dev/null | tee --append $dir/tmp.csv
    
    # append human readable date
    echo "hrTime" > $dir/dates.csv             
    while IFS= read -r line;
    do
        date +%Y%m%dT%H%M%S --date=@$line
    done < <((cat $dir/tmp.csv|cut -d "," -f 3)) >> $dir/dates.csv

    cat "$dir/dates.csv" | csvjoin "$dir/tmp.csv" - > $dir/RH.csv
    sed 's/[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9],//g' -i $dir/RH.csv
    rm $dir/tmp.csv
    cat $dir/RH.csv
}

QuerySub(){
        sub=$1
        sort=$2
        csvgrep -c 1 -r ".$sub" $dir/RH.csv | csvsort -c "$sort" -r | csvcut -c 1
}

download(){
    time='all'
    srt='top'
    subreddit=$1
    python3 -m bdfr clone $dir/fav \
    -s "$subreddit" \
    -t $time \
    -S $srt \
    --file-scheme '{POSTID}' \
    --search-existing \
    --no-dupes
}

search(){
        folder="$(echo "$query" | sed 's/ //g')"

        python3 -m bdfr clone $dir/search/$folder \
        --subreddit "all" \
        --sort "top" \
        --time "all" \
        --user "DontWorryAboutIt88"\
        --authenticate \
        --file-scheme '{POSTID}' \
        --search "'$query'" 
}

searchLocal(){
    fd --search-path $dir/fav --extension json $1 -x cat {} | jq
}

ShowMPVProperties(){
    for i in $(ls /tmp/mpvSockets/*); do
        echo '{ "command": ["get_property", "path"] }' | socat - "$i"; 
    done | jq

}

Get_MPV_Post_Info(){
    vid=($(ShowMPVProperties | grep -oe "/.*\.mp4" | sed 's/mp4/json/g'))
    for j in ${vid[@]};
    do
        find $j 2>/dev/null
    done
}

RH_MPV_Notify(){
    notify-send.sh $(jq -r .title $(Get_MPV_Post_Info)) 
    notify-send.sh $(jq -r '.comments[0].subreddit' $(Get_MPV_Post_Info))
    notify-send.sh $(jq -r .score $(Get_MPV_Post_Info))
}

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/opt/anaconda/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/opt/anaconda/etc/profile.d/conda.sh" ]; then
        . "/opt/anaconda/etc/profile.d/conda.sh"
    else
        export PATH="/opt/anaconda/bin:$PATH"
    fi
fi
unset __conda_setup

conda activate bdfr
# <<< conda initialize <<<

case $1 in
    '')
        sub=$(ls $dir/fav | rofi -dmenu)
        srt=$(cat $dir/srt | rofi -dmenu)
        redhot -s $sub $srt
    ;;

    "-r"| "--refresh")
        QueryAllFiles 
    ;;

    "-d" | "--download")
        download $2
    ;;
    
    "-S" | "--search")
        query="$2"
        search
    ;;

    "-sl" | "--search-local")
        searchLocal $2
    ;;

    "-s" | "--select")
        nohup mpv --playlist-start=0 $(QuerySub "$2" "$3")
        sleep 1s; closeTerm
    ;;

    "-n" | "--notify")
        RH_MPV_Notify
    ;;
esac

#bdfr month=$(date +%m)
#cat RH.csv | csvgrep -c 3 -r "2022-$month.*" | csvgrep -c 1 -r "BoutinelaBabes" | csvsort -c 2 -r | csvcut -c 1 

